/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SpringBoard-Structs.h"
#import "SBSwitcherWallpaperPageContentView.h"

@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface SBAppSwitcherSnapshotView : SBSwitcherWallpaperPageContentView {
	SBDisplayItem *_displayItem;
	SBApplication *_application;
	UIView *_containerView;
	SBAppSwitcherSettings *_settings;
	_SBAppSwitcherSnapshotContext *_snapshotContext;
	SBFakeStatusBarView *_fakeStatusBar;
	float _cornerRadius;
	CAShapeLayer *_solidColorBackstopLayer;
	SBZoomableCrossfadeView *_updateCrossfadeView;
	SBZoomableCrossfadeView *_zoomUpCrossfadeView;
	_SBAppSwitcherSnapshotContext *_zoomUpSnapshotContext;
	_SBAppSwitcherSnapshotContext *_deferredUpdateSnapshotContext;
	BOOL _isVisible;
	BOOL _presenting;
	BOOL _interactive;
	BOOL _invalidated;
	BOOL _loadedImage;
	BOOL _needsZoomUpImage;
	BOOL _needsTwoAppZoomUpBackground;
	BOOL _preferDownscaledSnapshot;
	int _appSnapshotUpdatedSequenceID;
	NSObject<OS_dispatch_queue> *_snapshotQueue;
	BOOL _shouldTransitionToDefaultPng;
	CGRect _statusBarLayoutFrame;
}
@property(readonly, copy, nonatomic) SBDisplayItem *displayItem;
@property(assign) BOOL invalidated;
@property(assign, nonatomic) BOOL shouldTransitionToDefaultPng;
@property(assign, nonatomic) CGRect statusBarLayoutFrame;
@property(retain, nonatomic) SBZoomableCrossfadeView *updateCrossfadeView;
+ (id)_fallbackDefaultBackgroundColor;
+ (id)appSwitcherSnapshotViewForDisplayItem:(id)displayItem orientation:(int)orientation preferringDownscaledSnapshot:(BOOL)snapshot loadAsync:(BOOL)async withQueue:(id)queue;
- (id)initWithDisplayItem:(id)displayItem application:(id)application orientation:(int)orientation preferringDownscaledSnapshot:(BOOL)snapshot async:(BOOL)async withQueue:(id)queue;
- (id)initWithFrame:(CGRect)frame;
- (void)_configureSnapshotImageView:(id)view;
- (int)_containerOrientation;
- (id)_contextForAvailableSnapshotWithLayoutState:(id)layoutState preferringDownscaled:(BOOL)downscaled defaultImageOnly:(BOOL)only;
- (void)_createStatusBarIfNeeded;
- (void)_crossfadeToNewSnapshotImage:(id)newSnapshotImage withSnapshotContext:(id)snapshotContext;
- (void)_crossfadeToZoomUpViewIfNecessaryForTransitionRequest:(id)transitionRequest;
- (CGRect)_frameForBackstopLayer;
- (void)_layoutContainer;
- (void)_layoutFakeStatusBar;
- (void)_loadImageAsyncFromSnapshotContext:(id)snapshotContext;
- (void)_loadImageAsyncFromSnapshotContext:(id)snapshotContext displayItem:(id)item;
- (void)_loadSnapshotAsyncPreferringDownscaled:(BOOL)downscaled;
- (void)_loadSnapshotSyncPreferringDownscaled:(BOOL)downscaled;
- (void)_loadZoomUpSnapshotSyncForTransitionRequest:(id)transitionRequest;
- (BOOL)_needsDifferentSnapshotForMedusaForLayoutState:(id)layoutState;
- (void)_prepareStatusBarIfNeededForTransitionRequest:(id)transitionRequest initialProgress:(float)progress;
- (CGImageRef)_queue_createDecodedImageIfPossible:(CGImageRef)possible;
- (BOOL)_queue_keepGoing;
- (CGAffineTransform)_rotationTransformForOrientation;
- (void)_setCornerRadiusIfNecessaryForSnapshotImageView:(id)snapshotImageView;
- (BOOL)_shouldAnimatePropertyWithKey:(id)key;
- (void)_snapshotChanged:(id)changed;
- (CGRect)_snapshotImageFrameForContext:(id)context;
- (void)_snapshotImageLoaded:(CGImageRef)loaded forSnapshotContext:(id)snapshotContext downscaled:(BOOL)downscaled;
- (id)_syncImageFromSnapshot:(id)snapshot;
- (int)_transformOrientation;
- (void)_updateTranslucency;
- (void)_viewDismissing:(id)dismissing;
- (void)_viewPresenting:(id)presenting;
- (float)cornerRadius;
- (void)dealloc;
- (id)description;
- (void)interactionDidEnd:(BOOL)interaction;
- (void)invalidate;
- (void)layoutSubviews;
- (void)prepareToBecomeVisibleIfNecessary;
- (void)respondToBecomingInvisibleIfNecessary;
- (void)setCornerRadius:(float)radius;
- (void)setOrientation:(int)orientation orientationBehavior:(int)behavior preferringDownscaledSnapshot:(BOOL)snapshot;
- (CGSize)sizeThatFits:(CGSize)fits;
- (void)viewDismissing:(id)dismissing withInteraction:(BOOL)interaction andInitialProgress:(float)progress forTransitionRequest:(id)transitionRequest;
- (void)viewPresenting:(id)presenting withInteraction:(BOOL)interaction andInitialProgress:(float)progress forTransitionRequest:(id)transitionRequest;
@end

