/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SpringBoard-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@protocol SBSceneResizeSnakebiteGestureDebugDelegate, SBSceneResizeSnakebiteGestureRecognizerDelegate;

__attribute__((visibility("hidden")))
@interface SBSceneResizeSnakebiteGestureRecognizer : XXUnknownSuperclass {
	BOOL _beganTrackingNearDivider;
	BOOL _ignoresTouchesMoved;
	BOOL _waitingForInvalidTouchToBecomeValid;
	float _dividerPosition;
	float _velocity;
	float _distanceTraveledFromInitialLocation;
	float _absoluteDistanceTraveled;
	UITouch *_leftTouch;
	UITouch *_rightTouch;
	UITouch *_singleTrackingTouch;
	UITouch *_waitingTouch;
	float _previousTouchPosition;
	id<SBSceneResizeSnakebiteGestureDebugDelegate> _debugDelegate;
	double _initialSingleTouchTimestamp;
	CGPoint _initialWaitingTouchLocation;
	CGPoint _initialTouchLocation;
	double _previousTouchTimestamp;
}
@property(assign, nonatomic) float absoluteDistanceTraveled;
@property(assign, nonatomic) BOOL beganTrackingNearDivider;
@property(assign, nonatomic) id<SBSceneResizeSnakebiteGestureDebugDelegate> debugDelegate;
@property(assign, nonatomic) id<SBSceneResizeSnakebiteGestureRecognizerDelegate> delegate;
@property(assign, nonatomic) float distanceTraveledFromInitialLocation;
@property(assign, nonatomic) float dividerPosition;
@property(assign, nonatomic, getter=_ignoresTouchesMoved, setter=_setIgnoresTouchesMoved:) BOOL ignoresTouchesMoved;
@property(assign, nonatomic) double initialSingleTouchTimestamp;
@property(assign, nonatomic) CGPoint initialTouchLocation;
@property(assign, nonatomic) CGPoint initialWaitingTouchLocation;
@property(retain, nonatomic, getter=_leftTouch, setter=_setLeftTouch:) UITouch *leftTouch;
@property(assign, nonatomic) float previousTouchPosition;
@property(assign, nonatomic) double previousTouchTimestamp;
@property(retain, nonatomic, getter=_rightTouch, setter=_setRightTouch:) UITouch *rightTouch;
@property(retain, nonatomic, getter=_singleTrackingTouch, setter=_setSingleTrackingTouch:) UITouch *singleTrackingTouch;
@property(assign, nonatomic) float velocity;
@property(assign, nonatomic, getter=isWaitingForInvalidTouchToBecomeValid) BOOL waitingForInvalidTouchToBecomeValid;
@property(retain, nonatomic, getter=_waitingTouch, setter=_setWaitingTouch:) UITouch *waitingTouch;
- (BOOL)_canStartAnyKindOfTrackingWithTouch:(id)touch;
- (BOOL)_checkInitialValidityOfTouch:(id)touch andTouch:(id)touch2;
- (BOOL)_checkOngoingValidityOfLeftTouch:(id)leftTouch rightTouch:(id)touch;
- (void)_clearTrackingTouches;
- (CGPoint)_convertViewPoint:(CGPoint)point toInterfaceOrientation:(int)interfaceOrientation;
- (CGRect)_convertViewRect:(CGRect)rect toInterfaceOrientation:(int)interfaceOrientation;
- (void)_debugRegionsDidChange;
- (float)_dividerViewOffset;
- (void)_drawDebugRegions;
- (void)_handleTouchesMovedForMultipleTouchTracking:(id)multipleTouchTracking withEvent:(id)event;
- (void)_handleTouchesMovedForSingleTouchTracking:(id)singleTouchTracking withEvent:(id)event;
- (int)_interfaceOrientation;
- (CGRect)_interfaceOrientedBounds;
- (CGPoint)_interfaceOrientedPoint:(CGPoint)point;
- (float)_normalizedLocationForViewOffset:(float)viewOffset;
- (void)_setDividerPosition:(float)position;
- (BOOL)_shouldConsiderSingleTouchTrackingAsFailed;
- (BOOL)_shouldContinueTrackingInvalidTouchWithDistanceFromDivider:(float)divider;
- (BOOL)_shouldStartTrackingSingleTouchAtLocation:(CGPoint)location distanceFromDivider:(float)divider;
- (BOOL)_singleTouchStartedInPinningAreaWithLocation:(CGPoint)location;
- (void)_startTrackingWithSingleTouch:(id)singleTouch;
- (void)_startTrackingWithTouch:(id)touch andTouch:(id)touch2;
- (void)_stopDrawingDebugRegions;
- (void)_updateStatsForTouchPosition:(float)touchPosition timestamp:(double)timestamp;
- (float)_viewOffsetForNormalizedLocation:(float)normalizedLocation;
- (void)dealloc;
- (CGPoint)interfaceOrientedLocationInView:(id)view;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (BOOL)willAllowResizeForSingleTouch:(id)singleTouch;
@end

